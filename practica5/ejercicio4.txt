4. ¿Qué alternativas existen para reducir el número de colisiones (y por ende de
desbordes) en un archivo organizado mediante la técnica de hashing?

• Elegir un algoritmo de dispersión perfecto, que no genere colisiones. Este tipo de algoritmo debe
asegurar que dadas dos claves diferentes siempre se obtendrán dos direcciones físicas diferentes.
Se ha demostrado que obtener este tipo de funciones resulta extremadamente difícil.

• Minimizar el número de colisiones a una cantidad aceptable, y de esta manera tratar dichas colisiones
como una condición excepcional. Existen diferentes modos de reducir el número de colisiones; las
alternativas disponibles son:

    . Distribuir los registros de la forma más aleatoria posible. Las colisiones se presentan cuando dos
o más claves compiten por la misma dirección física de memoria.

    . Utilizar más espacio de disco. La desventaja asociada con utilizar más espacio del necesario es el 
desperdicio de espacio. No hay una única respuesta para la pregunta acerca de cuánto espacio “vacío” debe 
dejarse o tolerarse en un archivo para minimizar las colisiones. Disminuye las posibilidades de colision.

    . Ubicar o almacenar más de un registro por cada dirección física en el archivo. Esto es, que cada 
dirección obtenida por la función de hash sea la dirección de un nodo o sector del disco donde es posible 
almacenar más de un registro. No obstante, la capacidad de un nodo es limitada, es decir, puede albergar 
una cantidad (previamente fijada) de registros asociados a claves sinónimos. Si, a pesar de la mayor de 
capacidad del nodo, un registro ya no cabe en esa dirección, se dice que el nodo está saturado o en overflow.
